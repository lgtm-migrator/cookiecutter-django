version: '3.3'
services:
  db:
    image: postgres:12.3
    container_name: db
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis:latest
    expose:
      - "6379"
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3.8.5
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: rabbit_user
      RABBITMQ_DEFAULT_PASS: rabbit_user_default_pass
      RABBITMQ_DEFAULT_VHOST: /
    expose:
      - "15672"
      - "5672"
    ports:
      - "5672:5672"
      - "15672:15672"

  webapp:
    restart: always
    image: oratio/virgo:latest
    depends_on:
      - redis
      - rabbitmq
    environment:
      DJANGO_SETTINGS_MODULE: {{ cookiecutter.project_name }}.development.settings
      BROKER_URL: amqp://{{ cookiecutter.project_name }}:rabbit_line_zap@rabbitmq:5672//
      DJANGOENV: development
      ENVIRONMENT: development
      PYTHON: python
      PROJECT_NAME: {{ cookiecutter.project_name }}
      TERM: xterm
      ROLE: development
    links:
      - db:postgres
      - redis:redis
      - rabbitmq:rabbitmq
    ports:
      - "80:80"
      - "443:443"
      - "8000:8000"
    expose:
      - "80"
      - "443"
      - "8000"
    volumes:
      - .:/var/www
    working_dir: /var/www
    command: bash -lc "pip install invoke jinja2 && invoke -r roles $${ROLE}"
    command: 'bash ./scripts/run-unittest.sh'
